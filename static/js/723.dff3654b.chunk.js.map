{"version":3,"file":"static/js/723.dff3654b.chunk.js","mappings":"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","sources":["webpack://hooks/./src/components/Title/SolidTitle.module.css?763b","components/Title/SolidTitle.jsx","views/PexelsImages/SearchFormHooks.js","webpack://hooks/./src/views/PexelsImages/ImagesList.module.css?420f","views/PexelsImages/ImagesListHooks.js","services/pexels.js","pages/Pixels/Pexels.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gradientColor\":\"SolidTitle_gradientColor__1rY8i\",\"title3\":\"SolidTitle_title3__-xwWe SolidTitle_gradientColor__1rY8i\",\"distort\":\"SolidTitle_distort__8t70A\"};","import s from './SolidTitle.module.css';\r\nimport { gsap } from 'gsap';\r\nimport { useRef, useCallback } from 'react';\r\n\r\nexport function SolidTitle({ titleText }) {\r\n  const title = useRef(); // теперь title - переменная, которая общается с заголовком <h2></h2> \r\n  // и получается, что 2 обработчика handleMouseLeave и handleMouseEnter будут работать конкретно с <h2></h2>\r\n  // Обработчики событий\r\n  // Обработчики требуют ссылку на дом-узел title.current\r\n  // нужно получить доступ к title т.е. к нашему <h2></h2> через useRef()\r\n  const handleMouseLeave = useCallback(() => {\r\n    gsap.to(\r\n      'feDisplacementMap',\r\n      1,\r\n      {\r\n        attr: {\r\n          scale: 0,\r\n        },\r\n        ease: 'circ.out',\r\n      },\r\n      1,\r\n    );\r\n    gsap.to(\r\n      'feTurbulence',\r\n      1,\r\n      {\r\n        attr: {\r\n          baseFrequency: '2.01 .01',\r\n        },\r\n        ease: 'circ.out',\r\n      },\r\n      1,\r\n    );\r\n    gsap.to(\r\n      title.current,\r\n      1,\r\n      {\r\n        fontVariationSettings: \"'wght' 700\",\r\n        ease: 'back.out',\r\n      },\r\n      1,\r\n    );\r\n  }, []);\r\n  const handleMouseEnter = useCallback(() => {\r\n    gsap.to('feDisplacementMap', 1, {\r\n      attr: {\r\n        scale: 100,\r\n      },\r\n      ease: 'circ.out',\r\n    });\r\n    gsap.to(\r\n      'feTurbulence',\r\n      1,\r\n      {\r\n        attr: {\r\n          baseFrequency: '2.08 .08',\r\n        },\r\n        ease: 'circ.out',\r\n      },\r\n      1,\r\n    );\r\n    gsap.to(title.current, 1, {\r\n      fontVariationSettings: \"'wght' 650\",\r\n      ease: 'back.out',\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2\r\n        className={s.title3}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        ref={title}\r\n      >\r\n        {titleText} {/* ожидаю через пропы значение заголовка */}\r\n      </h2>\r\n      <svg className={s.distort}>\r\n        <filter id=\"distortionFilter\">\r\n          <feTurbulence\r\n            type=\"fractalNoise\"\r\n            baseFrequency=\"2.01 .01\"\r\n            numOctaves=\"5\"\r\n            seed=\"2\"\r\n            stitchTiles=\"noStitch\"\r\n            x=\"0%\"\r\n            y=\"0%\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            result=\"noise\"\r\n          ></feTurbulence>\r\n          <feDisplacementMap\r\n            in=\"SourceGraphic\"\r\n            in2=\"noise\"\r\n            scale=\"0\"\r\n            xChannelSelector=\"R\"\r\n            yChannelSelector=\"B\"\r\n            x=\"0%\"\r\n            y=\"0%\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            filterUnits=\"userSpaceOnUse\"\r\n          ></feDisplacementMap>\r\n        </filter>\r\n      </svg>\r\n    </>\r\n  );\r\n}","import {useState} from 'react';\r\n\r\nexport function SearchForm({getSearchValues}) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [perPage, setPerPage] = useState(5);\r\n  \r\n  const handleSearchChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // this.setState({ [name]: value })\r\n    switch(name) {\r\n      case 'searchValue':\r\n        setSearchValue(value);\r\n        break;\r\n      case 'perPage':\r\n        setPerPage(value);\r\n        break;\r\n       default: \r\n    }\r\n  };\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('BEFORE FETCH', searchValue, perPage);\r\n    getSearchValues(searchValue, perPage);\r\n    setSearchValue('');\r\n    setPerPage(2);\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSearchSubmit}>\r\n    <input \r\n      type=\"text\" \r\n      name=\"searchValue\"\r\n      onChange={handleSearchChange} \r\n      value={searchValue}\r\n      placeholder=\"value\"\r\n    />\r\n     <input \r\n      type=\"number\"\r\n      name=\"perPage\"\r\n      onChange={handleSearchChange} \r\n      value={perPage}\r\n      placeholder=\"how many results?\"\r\n    />\r\n    <button type=\"submit\">search</button>\r\n  </form>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"imagesList\":\"ImagesList_imagesList__2hk-h\",\"loadMoreBtn\":\"ImagesList_loadMoreBtn__TMNNX\"};","import { useState, useEffect } from \"react\";\r\nimport {PixelsFetchObject} from '../../services/pexels'\r\nimport s from './ImagesList.module.css';\r\n\r\nconst base_url = 'https://api.pexels.com/v1/';\r\nconst api_key = 'C0c8jsEIkIzHhJ34LClN7vk5fJStc0qpj2n2MRQ5zthwSKBkRibKG5uF';\r\nconst newPexelsFetchObject = new PixelsFetchObject(base_url, api_key);\r\nconsole.log(newPexelsFetchObject);\r\n\r\nexport function ImagesList({searchValue, perPage}) {\r\n  const [searchResults, setSearchResult] = useState([]);\r\n  const [status, setStatus] = useState('init');\r\n\r\n  useEffect(() => {\r\n    if(!searchValue.trim()) return;\r\n    setStatus('pending');\r\n    newPexelsFetchObject.resetPage();\r\n    newPexelsFetchObject.searchQuery = searchValue; \r\n    newPexelsFetchObject.perPage = perPage;\r\n\r\n    newPexelsFetchObject.searchPhotos()\r\n      .then(res => {\r\n        console.log(res);\r\n        //this.setState({ searchResults: res, status: 'success' })\r\n        setStatus('success');\r\n        setSearchResult(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        //this.setState({status: 'error'})\r\n        setStatus('error');\r\n        // setStatus(() => (err ? 'error' : 'Opps'));\r\n      });\r\n      // return () => alert('UNMOUNT');\r\n  }, [searchValue, perPage]);\r\n\r\n\r\n  const handleClick = () => {\r\n    newPexelsFetchObject.page = 1;\r\n    console.log(newPexelsFetchObject.page);\r\n    newPexelsFetchObject.searchPhotos()\r\n      .then((res) => {\r\n        console.log(res);\r\n        setSearchResult(prev => [...prev, ...res]);\r\n        setStatus('success');\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n        setStatus('error');\r\n      })  \r\n  }\r\n\r\n  if(status === 'init') {\r\n    return (\r\n    <h1>Hello! Search something.</h1>\r\n    )\r\n  }\r\n  if(status === 'pending') {\r\n    return (\r\n    <h1>Wait please!</h1>\r\n    )\r\n  }\r\n  if(status === 'success') {\r\n    return (\r\n      <>\r\n        <ul className={s.imagesList}>\r\n          {searchResults.length > 0 && \r\n            searchResults.map(el => (\r\n              <li key={el.id}>\r\n                <img src={el.src.small} alt={el.alt}/>\r\n              </li>\r\n          ))}\r\n        </ul>   \r\n        <button type='button' onClick={handleClick} className={s.loadMoreBtn}>Load more</button>\r\n      </>\r\n    )\r\n  }\r\n  if(status === 'error') {\r\n    return (\r\n      <h1>ALARMA!!!</h1>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\n\r\n// OOP\r\nexport class PixelsFetchObject {\r\n  constructor(base_url, api_key) {\r\n    this.base_url = base_url;\r\n    this.api_key = api_key;\r\n    this._searchQuery = '';\r\n    this._page = 1;\r\n    this._perPage = 5;\r\n    this.endpoint = '';\r\n  }\r\n\r\n  get searchQuery() {\r\n    return this._searchQuery;\r\n  }\r\n\r\n  set searchQuery(value) {\r\n    return (this._searchQuery = value);\r\n  }\r\n\r\n  get page() {\r\n    return this._page;\r\n  }\r\n\r\n  set page(value) {\r\n    return (this._page += value); // изменяем значение на 1\r\n  }\r\n\r\n  resetPage() {\r\n    return (this._page = 1), (this._perPage = 5);\r\n  }\r\n\r\n  get perPage() {\r\n    return this._perPage;\r\n  }\r\n\r\n  set perPage(value) {\r\n    return (this._perPage = value);\r\n  }\r\n\r\n  searchPhotos() {\r\n    axios.defaults.baseURL = this.base_url;\r\n    axios.defaults.headers.common.Authorization = this.api_key;\r\n    \r\n    this.endpoint = 'search';\r\n    console.log('searchQuery:', this.searchQuery, 'page:', this.page, 'perPage:', this.perPage);\r\n    let params = `?query=${this.searchQuery}&page=${this.page}&per_page=${this.perPage}`;\r\n    let url = this.endpoint + params;\r\n\r\n    return axios.get(url)\r\n      .then((result) => {\r\n        // console.log(result);\r\n        return result.data;\r\n      })\r\n      .then(data => {\r\n        // console.log(data);\r\n       return data.photos\r\n      })\r\n      .catch((err) => {\r\n        (console.log(err));\r\n      })\r\n  }\r\n\r\n   // Перепишем на async\r\n  //  async searchPhotos() {\r\n  //   axios.defaults.baseURL = this.base_url;\r\n  //   axios.defaults.headers.common.Authorization = this.api_key;\r\n    \r\n  //   this.endpoint = 'search';\r\n  //   let params = `?query=${this.searchQuery}&page=${this.searchPage}&per_page=${this.searchPerPage}`;\r\n  //   let url = this.endpoint + params;\r\n\r\n  //   try {\r\n  //     const result = await axios.get(url);\r\n  //     const data = result.data.phtos;\r\n  //     return data;\r\n  //   } catch {err => {\r\n  //     return err.message;\r\n  //   }}\r\n  // }\r\n}\r\n\r\n// DECLARATIVE\r\n// export function PixelsFetchFunc() {\r\n//   const base_url = 'https://api.pexels.com/v1/';\r\n//   const api_key = 'C0c8jsEIkIzHhJ34LClN7vk5fJStc0qpj2n2MRQ5zthwSKBkRibKG5uF';\r\n//   axios.defaults.baseURL = base_url;\r\n//   axios.defaults.headers.common.Authorization = api_key;\r\n\r\n//   const searchPhotos = (searchQuery, searchPage, searchPerPage) => {\r\n//     axios.defaults.baseURL = this.base_url;\r\n//     axios.defaults.headers.common.Authorization = this.api_key;\r\n    \r\n//     let endpoint = 'search';\r\n//     let params = `?query=${searchQuery}&page=${searchPage}&per_page=${searchPerPage}`\r\n//     let url = endpoint + params;\r\n\r\n//     axios.get(url)\r\n//       .then((result) => {\r\n//         console.log(result);\r\n//       })\r\n//       .catch((err) => {\r\n//         (console.log(err));\r\n//       })\r\n//   }\r\n// }\r\n","import { useState } from \"react\";\r\n\r\nimport { SearchForm } from \"../../views/PexelsImages/SearchFormHooks\"\r\nimport { ImagesList } from \"../../views/PexelsImages/ImagesListHooks\"\r\nimport { SolidTitle } from \"../../components/Title/SolidTitle\"\r\n\r\nexport default function PexelsPage () {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [perPage, setPerPage] = useState(5);\r\n\r\n  const getSearchValues = (searchValue, perPage) => {\r\n    setSearchValue(searchValue);\r\n    setPerPage(perPage);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <h2>Pexels</h2>\r\n      <SearchForm getSearchValues={getSearchValues}/>\r\n      <ImagesList\r\n        searchValue={searchValue}\r\n        perPage={perPage}\r\n        />\r\n    </>\r\n  )\r\n}"],"names":["SolidTitle","_ref","titleText","title","useRef","handleMouseLeave","useCallback","gsap","to","attr","scale","ease","baseFrequency","current","fontVariationSettings","handleMouseEnter","_jsxs","_Fragment","children","className","s","title3","onMouseEnter","onMouseLeave","ref","_jsx","distort","id","type","numOctaves","seed","stitchTiles","x","y","width","height","result","in","in2","xChannelSelector","yChannelSelector","filterUnits","SearchForm","getSearchValues","searchValue","setSearchValue","useState","perPage","setPerPage","handleSearchChange","e","name","value","target","onSubmit","preventDefault","console","log","onChange","placeholder","newPexelsFetchObject","constructor","base_url","api_key","this","_searchQuery","_page","_perPage","endpoint","searchQuery","page","resetPage","searchPhotos","axios","defaults","baseURL","headers","common","Authorization","params","concat","url","get","then","data","photos","catch","err","ImagesList","searchResults","setSearchResult","status","setStatus","useEffect","trim","res","handleClick","prev","imagesList","length","map","el","src","small","alt","onClick","loadMoreBtn","PexelsPage"],"sourceRoot":""}